CREATE TABLE app (
    id VARCHAR(36) PRIMARY KEY,
    apiClientKey VARCHAR(255) UNIQUE NOT NULL,
    name VARCHAR(255) UNIQUE NOT NULL,
    isActive TINYINT(1) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE user (
    id VARCHAR(36) PRIMARY KEY,
    appId VARCHAR(36) NOT NULL,
    clientUserId VARCHAR(255),
    name VARCHAR(255),
    profileImgUrl TEXT,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_user_app FOREIGN KEY (appId) REFERENCES app(id) ON DELETE CASCADE
);

CREATE TABLE channel (
    id VARCHAR(36) PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL,
    appId VARCHAR(36) NOT NULL,
    clientReferenceId VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_channel_app FOREIGN KEY (appId) REFERENCES app(id) ON DELETE CASCADE,
    CONSTRAINT unique_app_clientReferenceId UNIQUE (appId, clientReferenceId)
);

CREATE TABLE message (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,  -- Sửa BIGSERIAL thành BIGINT AUTO_INCREMENT
    channelId VARCHAR(36) NOT NULL,
    userId VARCHAR(36) NOT NULL,
    message TEXT NOT NULL,
    imgUrl VARCHAR(2000) NOT NULL,  -- Đổi TEXT NOT NULL thành VARCHAR(2000) NOT NULL
    isDeleted TINYINT(1) NOT NULL,  -- Đổi BOOLEAN thành TINYINT(1)
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_message_channel FOREIGN KEY (channelId) REFERENCES channel(id) ON DELETE CASCADE,
    CONSTRAINT fk_message_user FOREIGN KEY (userId) REFERENCES user(id) ON DELETE CASCADE
);

CREATE TABLE userReadMessage (
    id VARCHAR(36) PRIMARY KEY,
    channelId VARCHAR(36) NOT NULL,
    userId VARCHAR(36) NOT NULL,
    lastReadMessage TIMESTAMP NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_userReadMessage_channel FOREIGN KEY (channelId) REFERENCES channel(id) ON DELETE CASCADE,
    CONSTRAINT fk_userReadMessage_user FOREIGN KEY (userId) REFERENCES user(id) ON DELETE CASCADE,
    CONSTRAINT unique_channel_user UNIQUE (channelId, userId)
);
